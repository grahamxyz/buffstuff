GAS LISTING sum.s 			page 1


   1              		.text
   2              		.globl	_start
   3              	_start:
   4 0000 48C7C306 		mov	$n,%rbx	        # number of ints to sum
   4      000000
   5 0007 48C7C600 		mov	$seqbeg,%rsi	# ints to sum
   5      000000
   6 000e E8210000 		call	sum		# %rax=sum(%rsi,%rbx)
   6      00
   7 0013 48C7C600 		mov	$bufend,%rsi	# addr of newline
   7      000000
   8 001a E82F0000 		call	itoa		# %rsi=itoa(%rax,%rsi)
   8      00
   9 001f E8510000 		call	puts		# puts(%rsi)
   9      00
  10 0024 48C7C700 		mov	$0,%rdi		# exit code
  10      000000
  11 002b 48C7C03C 		mov	$60,%rax	# exit()
  11      000000
  12 0032 0F05     		syscall
  13              	
  14              	############################################################1
  15              	
  16              	# %rax=sum(%rsi,%rbx)
  17 0034 48C7C000 	sum:	mov	$0,%rax
  17      000000
  18 003b 4883FB00 	1:	cmp	$0,%rbx
  19 003f 740C     		je	2f
  20 0041 48FFCB   		dec	%rbx
  21 0044 480306   		add	(%rsi),%rax
  22 0047 4883C608 		add	$8,%rsi
  23 004b EBEE     		jmp	1b
  24 004d C3       	2:	ret
  25              	
  26              	# %rsi=itoa(%rax,%rsi)
  27              	itoa:
  28 004e 48C7C30A 	1:	mov	$10,%rbx	# div/rem by ten
  28      000000
  29 0055 E80F0000 		call	divide		# %rax,%rdx=divide(%rax,%rbx)
  29      00
  30 005a 80C230   		add	$'0,%dl		# ascii-fy digit
  31 005d 48FFCE   		dec	%rsi
  32 0060 8816     		mov	%dl,(%rsi)
  33 0062 4883F800 		cmp	$0,%rax
  34 0066 75E6     		jne	1b
  35 0068 C3       		ret
  36              		
  37              	# %rax,%rdx=divide(%rax,%rbx)
  38              	divide:
  39 0069 4889C2   		mov	%rax,%rdx
  40 006c 48C1EA20 		shr	$32,%rdx	# %rdl=%rdh, %rdh=0
  41 0070 89C0     		mov	%eax,%eax	# %rah=0 (tricky!)
  42 0072 F7F3     		div	%ebx		# %eax,%edx=[%edx:%eax]/%ebx
  43 0074 C3       		ret
  44              		
  45              	# puts(%rsi)
  46 0075 E8110000 	puts:	call	strlen		# %rdx=strlen(%rsi)
GAS LISTING sum.s 			page 2


  46      00
  47 007a 48C7C701 		mov	$1,%rdi		# stdout
  47      000000
  48 0081 48C7C001 		mov	$1,%rax		# write()
  48      000000
  49 0088 0F05     		syscall
  50 008a C3       		ret
  51              		
  52              	# %rdx=strlen(%rsi)
  53 008b 48C7C200 	strlen: mov	$0,%rdx
  53      000000
  54 0092 8A0416   	1:	mov	(%rsi,%rdx),%al
  55 0095 3C00     		cmp	$0,%al
  56 0097 7405     		je	2f
  57 0099 48FFC2   		inc	%rdx
  58 009c EBF4     		jmp	1b
  59 009e C3       	2:	ret
  60              	
  61              		.data
  62 0000 05000000 	seqbeg:	.quad	5,6,1,8,3,7     	# ints to sum
  62      00000000 
  62      06000000 
  62      00000000 
  62      01000000 
  63              	seqend:	
  64 0030 00000000 	bufbeg:	.space  19			# biggest 64-bit decimal number
  64      00000000 
  64      00000000 
  64      00000000 
  64      000000
  65 0043 0A00     	bufend: .string	"\n"			# newline
  66              		.set	n,(seqend-seqbeg)/8   	# number of ints to sum
GAS LISTING sum.s 			page 3


DEFINED SYMBOLS
               sum.s:3      .text:0000000000000000 _start
                            *ABS*:0000000000000006 n
               sum.s:62     .data:0000000000000000 seqbeg
               sum.s:17     .text:0000000000000034 sum
               sum.s:65     .data:0000000000000043 bufend
               sum.s:27     .text:000000000000004e itoa
               sum.s:46     .text:0000000000000075 puts
               sum.s:38     .text:0000000000000069 divide
               sum.s:53     .text:000000000000008b strlen
               sum.s:63     .data:0000000000000030 seqend
               sum.s:64     .data:0000000000000030 bufbeg

NO UNDEFINED SYMBOLS
